[tools]
rust = { "version" = "latest", "components" = "rustfmt,clippy" }

[env]
FILE_NAME = "cutler-dev-darwin.zip"

# Developer documentation generation

[tasks.doc]
run = [
    "rm -rf landing/dev-docs && mkdir landing/dev-docs",
    "cargo doc --locked --no-deps",
    "mv target/doc/* landing/dev-docs/",
]

# Test suite for cutler

[tasks.lint]
run = "cargo clippy"

[tasks.test]
run = "cargo build && cargo test --verbose"

[tasks.format]
run = "cargo fmt --all -- --check"

[tasks.testsuite]
depends = ['lint', 'test', 'format']

# Release-related tasks
# Set FILE_NAME using: mise set FILE_NAME=<zip-name>.zip

[tasks.build]
run = "cargo build --release --verbose --locked"

[tasks.manpage]
run = "cargo xtask manpage"

[tasks.release]
depends = ['testsuite', 'build', 'manpage']
run = """
#!/bin/bash
mkdir -p release/bin release/man/man1
cp target/release/cutler release/bin/
cp target/man/cutler.1 release/man/man1/
cp LICENSE release/
cp README.md release/
cd release && zip -r ../$FILE_NAME bin man README.md LICENSE
cd ..
rm -rf release
"""

# Publishing related tasks
# Since I don't release cutler by hand,
# the FILE_NAME and CRATES_TOKEN env vars are handed by GitHub Actions.

[tasks.cratesprep]
run = """
#!/bin/bash

file="README.md"

if [ ! -f "$file" ]; then
    echo "File '$file' not found."
    exit 1
fi

sed -i '' '/^>/d' "$file"
"""

[tasks.publish]
depends = ['release', 'cratesprep']
run = "cargo publish --token $CRATES_TOKEN --allow-dirty"
